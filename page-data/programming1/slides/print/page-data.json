{"componentChunkName":"component---node-modules-caf-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/programming1/slides/print","result":{"data":{"deck":{"id":"6209d003-41ed-595f-bbb7-ee938a1ed9e0","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar theme = _objectSpread(_objectSpread({}, mytheme), prism);\n\nvar _frontmatter = {};\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Programming with Caf.js\"), mdx(\"h2\", null, \"Part 1\"), mdx(\"p\", null, \"Antonio Lain, Caf.js Labs\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"mailto:antlai@cafjs.com\"\n  }, \"antlai@cafjs.com\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Part 1 covers\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Component Model\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cloud Assistant\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Autonomous Computation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Client Library\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Part 2 will cover\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusted Bus\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SharedMap\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Publish-Subscribe\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Caf.js Lite (IoT)\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Component Model\"), mdx(\"p\", null, \"Inspired by\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the SmartFrog framework,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"and the Erlang/OTP libraries.\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Build \", mdx(\"ins\", null, \"everything\"), \" with hierarchies of components\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deterministic asynchronous creation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Supervision trees\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Navigating the hierarchy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Describing hierarchies with JSON\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Asynchronous factory method\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"exports.newInstance = async ($, spec) => ...\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Never block the main loop\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Swap implementations without modifying code\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Deterministic Creation Order\"), mdx(SplitImage, {\n    mdxType: \"SplitImage\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Left to right\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Parent after children\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Top component first\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Destroy reverses order\")), mdx(ComponentTree, {\n    width: \"100%\",\n    height: \"100%\",\n    mdxType: \"ComponentTree\"\n  })), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Enforce dependencies with  creation order\"), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Supervision trees\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Deep health checks\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Parent periodically checks children\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recovery strategies\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Shutdown and restart all\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Restart only failed ones\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ignore\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bubble up error when recover fails\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Last resort Kubernetes restarts container\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Navigating the hierarchy\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Siblings in \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"this.$\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Topmost \", mdx(\"ins\", null, \"visible\"), \" component in \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"this.$._\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Application code uses security proxies\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"this.$.log -> $._.$.log\\n\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"p\", null, \"Describing hierarchies with JSON\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n    \\\"name\\\" : \\\"top\\\",\\n    \\\"module\\\" : \\\"caf_components#supervisor\\\",\\n    \\\"description\\\" : \\\"Supervisor for this app.\\\",\\n    \\\"env\\\": {\\n        \\\"logLevel\\\": \\\"process.env.LOG_LEVEL||DEBUG\\\",\\n        \\\"somethingElse\\\": \\\"process.env.SOMETHING_ELSE||{\\\\\\\"goo\\\\\\\":2}\\\"\\n    },\\n    \\\"components\\\": [\\n        {\\n            \\\"name\\\" : \\\"log\\\",\\n            \\\"module\\\": \\\"caf_components#plug_log\\\",\\n            \\\"description\\\": \\\"Logger service\\\",\\n            \\\"env\\\" : {\\n                \\\"logLevel\\\" : \\\"$._.env.logLevel\\\"\\n            }\\n        }\\n    ]\\n}\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"p\", null, \"Modifying \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"log\"), \" with file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<name>++.json\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n    \\\"name\\\": \\\"top\\\",\\n    \\\"components\\\": [\\n        {\\n            \\\"name\\\": \\\"log\\\",\\n            \\\"env\\\": {\\n                \\\"logLevel\\\" : \\\"WARN\\\"\\n            }\\n        }\\n    ]\\n}\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"p\", null, \"Deleting \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"log\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n    \\\"name\\\": \\\"top\\\",\\n    \\\"components\\\": [\\n        {\\n            \\\"name\\\": \\\"log\\\",\\n            \\\"module\\\" : null\\n        }\\n    ]\\n}\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"p\", null, \"Adding \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bar\"), \" after \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"log\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n    \\\"name\\\": \\\"top\\\",\\n    \\\"components\\\": [\\n        {\\n            \\\"name\\\": \\\"log\\\"\\n        },\\n        {\\n            \\\"name\\\" : \\\"bar\\\",\\n            \\\"module\\\": \\\"./myApp\\\",\\n            \\\"description\\\": \\\"My other app component\\\",\\n            \\\"env\\\" : {\\n                \\\"somethingElse\\\" : \\\"$._.env.somethingElse\\\",\\n                \\\"message\\\" : \\\"Whatever\\\"\\n            }\\n        }\\n    ]\\n}\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Much more\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"framework.json\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ca.json\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"iot.json\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Build your own\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.cafjslabs.com/docs/documentation#components\"\n  }, \"https://www.cafjslabs.com/docs/documentation#components\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h1\", null, \"Cloud Assistant\"), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Start with an Actor\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Location-independent name\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Private state (kilobytes)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Local queue to serialize requests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Asynchronous interactions with others\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"p\", null, \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ca_methods.js\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const caf = require('caf_core');\\nexports.methods = {\\n    async __ca_init__() {\\n        this.state.counter = 0;\\n        return [];\\n    },\\n    async getCounter() {\\n        this.$.log && this.$.log.debug('getCounter()')\\n        return [null, this.state.counter];\\n    }\\n};\\ncaf.init(module);\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Request serialization is a \", mdx(\"ins\", null, \"cluster-wide\"), \" property\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Hundreds\"), \" of node.js processes across \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"many\"), \" servers\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"But at most \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"one\"), \" active CA with a given name\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Serialized across multiple asynchronous steps\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"h3\", null, \"No races\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const caf = require('caf_core');\\nconst util = require('util');\\nconst setTimeoutPromise = util.promisify(setTimeout);\\nexports.methods = {\\n    async __ca_init__() {\\n        this.state.counter = 0;\\n        return [];\\n    },\\n    async increment() {\\n        this.state.counter = this.state.counter + 1;\\n        await setTimeoutPromise(1000);\\n        return this.getCounter();\\n    },\\n    async getCounter() {\\n        return [null, this.state.counter];\\n    }\\n};\\ncaf.init(module);\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Transactional changes to private state\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Scope of the transaction is \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"one\"), \" request\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Multiple asynchronous steps\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rollback state changes on error\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Commit changes after checkpointing (Redis)\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"div\", null, mdx(\"h4\", null, \"Rollback on Error\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Application Errors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Unrecoverable Errors\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const caf = require('caf_core');\\nconst assert = require('assert');\\nexports.methods = {\\n    async __ca_init__() {\\n        this.state.counter = 0;\\n        return [];\\n    },\\n    async increment(n) {\\n        if (n <= 0) {\\n            return [new Error('Only increment!')];\\n        } else {\\n            this.state.counter = this.state.counter + n;\\n            assert(!isNaN(this.state.counter));\\n            return this.getCounter();\\n        }\\n    },\\n    async getCounter() {\\n        return [null, this.state.counter];\\n    }\\n};\\ncaf.init(module);\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"External Consistency\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Private state \", mdx(\"ins\", null, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"always\")), \" consistent with external commitments\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Transactional plugins\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Delay externalization \", mdx(\"ins\", null, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"after\")), \" commit\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make actions safe to retry\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"After failure, redo checkpointed actions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Combine plugins with a two-phase commit protocol\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"div\", null, mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Transactional Plugin\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ignore \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"notify\"), \" on error\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Resend after crash\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const caf = require('caf_core');\\nconst assert = require('assert');\\nexports.methods = {\\n    async __ca_init__() {\\n        this.state.counter = 0;\\n        return [];\\n    },\\n    async increment() {\\n        this.state.counter = this.state.counter + 1;\\n        this.$.session.notify([this.state.counter]);\\n        if (this.state.counter <= 100) {\\n            return this.getCounter();\\n        } else {\\n            return [new Error('Limit exceeded')];\\n        }\\n    },\\n    async getCounter() {\\n        return [null, this.state.counter];\\n    }\\n};\\ncaf.init(module);\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Much more\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Update internal state schema safely\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Read properties from the environment\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Customize actions after hibernation\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.cafjslabs.com/docs/documentation#cloud-assistant\"\n  }, \"https://www.cafjslabs.com/docs/documentation#cloud-assistant\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Autonomous Computation\"), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Autonomous Cloud Assistant\"), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(WindMill, {\n    width: \"90%\",\n    height: \"90%\",\n    mdxType: \"WindMill\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"__ca_pulse__()\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Notification queues for offline clients\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Client picks \", mdx(\"ins\", null, \"easy to remember\"), \" session name\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Continuity across client devices,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"or different for each device\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Queue selected by session name\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Queue size managed by user code\"))))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"div\", null, mdx(\"h4\", null, \"Notifications\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"limitQueue()\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"notify()\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const caf = require('caf_core');\\nconst SESSION = 'admin';\\nexports.methods = {\\n    async __ca_init__() {\\n        this.state.counter = 0;\\n        this.$.session.limitQueue(1, SESSION);\\n        return [];\\n    },\\n    async __ca_pulse__() {\\n        this.state.counter = this.state.counter + 1;\\n        if (this.state.counter % this.$.props.divisor === 0) {\\n            this.$.session.notify([this.state.counter], SESSION);\\n        }\\n        return [];\\n    }\\n};\\ncaf.init(module);\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"div\", null, mdx(\"h4\", null, \"Notification groups\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On-demand queues\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"getCounter()\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"RegExp for names\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const caf = require('caf_core');\\nconst SESSION = /^admin/;\\nexports.methods = {\\n    async __ca_init__() {\\n        this.state.counter = 0;\\n        return [];\\n    },\\n    async __ca_pulse__() {\\n        this.state.counter = this.state.counter + 1;\\n        if (this.state.counter % this.$.props.divisor === 0) {\\n            this.$.session.notify([this.state.counter], SESSION);\\n        }\\n        return [];\\n    },\\n    async getCounter() {\\n        return [null, this.state.counter];\\n    }\\n};\\ncaf.init(module);\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Much more\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Persistent Sessions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stateless client recovery\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.cafjslabs.com/docs/documentation#autonomous\"\n  }, \"https://www.cafjslabs.com/docs/documentation#autonomous\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h1\", null, \"Client Library\"), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Caf.js client library\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tiny, just needs web socket support\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Browser, cloud, script, and embedded devices\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Combines\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"authentication,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"request-response,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"and notifications\")))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Authentication\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JSON Web Token embedded in URL is\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"self-describing,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"signed by the \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Accounts\"), \" service,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"locally validated with an injected public key,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"short-lived,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"and managed in the Cloud by the \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Launcher\"), \" app\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Single Sign-On with attenuated tokens,\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"forming a meet-semilattice\")))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Implicit Cloud Assistant (CA) creation\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://root-hello.cafjs.com/#from=foo-ca1&ca=foo-ca1&token=Hs1\"\n  }, \"https://root-hello.cafjs.com/#from=foo-ca1&ca=foo-ca1&token=Hs1\"), \"...\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Naming based on local namespaces\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"User \", mdx(\"ins\", null, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"foo\")), \", CA local name \", mdx(\"ins\", null, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ca1\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When \", mdx(\"ins\", null, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"from\")), \" equals \", mdx(\"ins\", null, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ca\")), \", the client is the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"owner\"), \",\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"and owners create CAs on first access\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Token validates the \", mdx(\"ins\", null, \"from\"), \" field\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"ins\", null, \"foo-ca1\"), \" in application \", mdx(\"ins\", null, \"root-hello\"))))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"div\", null, mdx(\"h4\", null, \"Request-Response\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Magic methods\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Error handling\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const caf_cli = require('caf_core').caf_cli;\\nconst URL = 'http://root-hello.vcap.me:3000/#from=foo-ca1&ca=foo-ca1';\\nconst s = new caf_cli.Session(URL);\\ns.onopen = async function() {\\n    try {\\n        const counter1 = await s.increment(7).getPromise();\\n        const counter2 = await s.getCounter().getPromise();\\n        console.log(`before:${counter1} after:${counter2}`);\\n        s.close();\\n    } catch (err) {\\n        s.close(err); // Application-level error\\n    }\\n};\\ns.onclose = function(err) {\\n    err && console.log(`Got exception ${err}`);\\n    err && process.exit(1);\\n};\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"div\", null, mdx(\"h3\", null, \"Notifications\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"session=admin\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onmessage()\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const caf_cli = require('caf_core').caf_cli;\\nconst util = require('util');\\nconst setTimeoutPromise = util.promisify(setTimeout);\\nconst s = new caf_cli.Session(\\n    'http://root-hello.vcap.me/#session=admin&from=foo-ca1&ca=foo-ca1';\\n);\\ns.onopen = async function() {\\n    await setTimeoutPromise(10000)\\n    s.close();\\n};\\ns.onmessage = function(msg) {\\n    const counter = caf_cli.getMethodArgs(msg)[0];\\n    console.log(`Got notification ${counter}`);\\n};\\ns.onclose = function(err) {\\n    err && console.log(`Got exception ${err}`);\\n    err && process.exit(1);\\n};\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Summary\"), mdx(SplitImage, {\n    mdxType: \"SplitImage\"\n  }, mdx(\"div\", null, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Component Model\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Asynchronous construction\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Supervision tree / navigation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JSON descriptions\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cloud Assistant\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Request serialization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Transactional Actor\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Transactional plugins\"))))), mdx(\"div\", null, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Autonomous Computation\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"__ca_pulse__()\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Offline notifications\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Notification groups\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Client Library\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Authentication\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Request-response\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Notifications\")))))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Wrap up\"), mdx(\"p\", null, \"Website: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.cafjs.com\"\n  }, \"https://www.cafjs.com\")), mdx(\"p\", null, \"Github: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/cafjs/caf\"\n  }, \"https://github.com/cafjs/caf\")), mdx(\"p\", null, \"Caf.js Cloud: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://root-launcher.cafjs.com\"\n  }, \"https://root-launcher.cafjs.com\")), mdx(\"p\", null, \"Twitter: @cafjs\"), mdx(\"p\", null, \"E-mail: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"mailto:antlai@cafjs.com\"\n  }, \"antlai@cafjs.com\")));\n}\n;\nMDXContent.isMDXComponent = true;","title":"Programming with Caf.js"}},"pageContext":{"id":"6209d003-41ed-595f-bbb7-ee938a1ed9e0","slug":"/programming1/slides","title":"Programming with Caf.js"}},"staticQueryHashes":[]}