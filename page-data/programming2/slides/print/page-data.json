{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/programming2/slides/print","result":{"data":{"deck":{"id":"6d002da4-1c20-5170-aff6-ad13df225e86","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar theme = _objectSpread(_objectSpread({}, mytheme), prism);\n\nvar _frontmatter = {};\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Programming with Caf.js\"), mdx(\"h2\", null, \"Part 2\"), mdx(\"p\", null, \"Antonio Lain, Caf.js Labs\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"mailto:antlai@cafjs.com\"\n  }, \"antlai@cafjs.com\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Part 1 covered\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Component Model\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cloud Assistant\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Autonomous Computation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Client Library\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Two themes for today\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Collaborative multi-tenancy for your app\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusted Bus\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SharedMap\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Publish-Subscribe\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Three-way isomorphic framework\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Caf.js Lite (IoT)\")))), mdx(\"hr\", null), mdx(\"h2\", null, \"Multi-tenancy\"), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitImage, {\n    mdxType: \"SplitImage\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Isolate\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fair share\")), mdx(Multi1, {\n    width: \"60%\",\n    height: \"60%\",\n    mdxType: \"Multi1\"\n  })), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Collaborative Multi-tenancy\"), mdx(SplitImage, {\n    mdxType: \"SplitImage\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"More fun!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bootstrap trust\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Enable interactions\")), mdx(Multi2, {\n    width: \"60%\",\n    height: \"60%\",\n    mdxType: \"Multi2\"\n  })), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Collaborative Multi-tenancy\"), mdx(SplitImage, {\n    mdxType: \"SplitImage\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Repeatability and control\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusted Bus\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"High-level communication\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SharedMap\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Publish-Subscribe\")))), mdx(Multi3, {\n    width: \"100%\",\n    height: \"100%\",\n    mdxType: \"Multi3\"\n  })), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Trusted Bus\"), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CA to CA interaction,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"within \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"one\"), \" app,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"with access control\")), mdx(TrustedBus, {\n    width: \"100%\",\n    height: \"100%\",\n    mdxType: \"TrustedBus\"\n  })), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Authentication\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Client library authentication \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"not enough\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No tokens, no crypto\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How?\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusted endpoints add source CA name to request,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"and injected requests cannot be modified\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Implementation\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Security proxies wrap \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Trusted Bus\"), \" plugins\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Kubernetes network policy\")))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Authorization\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Before calling a CA method,\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"check access control policy\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"While the method executes,\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"query the caller CA name\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Same policy for client library calls\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Default policy\"), mdx(\"h3\", null, mdx(\"ins\", null, \"Trust No One\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Trusted Bus\"), \" interactions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Only the owner can call CA methods,\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"using the client library\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If nothing works...\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"check the security policy first!\")))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"div\", null, mdx(\"h3\", null, \"Simple Rules\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Local namespaces\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"antonio-ca1\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ownership rules\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"antonio\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"security.SELF\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Group methods\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[methods]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"null\"), \" for any\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const caf = require('caf_core');\\nexports.methods = {\\n    async __ca_init__() {\\n        this.state.counter = 0;\\n        const rule = this.$.security.newSimpleRule(\\n            'getCounter', this.$.security.SELF\\n        );\\n        this.$.security.addRule(rule);\\n        return [];\\n    },\\n    async getCounter() {\\n        this.$.log && this.$.log.debug('getCounter()')\\n        return [null, this.state.counter];\\n    }\\n};\\ncaf.init(module);\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Aggregate Rules\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dynamic policies with groups\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Implemented with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SharedMaps\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sharing a group with many CAs\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Replicating \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SharedMaps\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Group membership maintained by a team\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Linking between \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SharedMaps\"))))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Much more\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Decentralized authorization (inspired by SDSI)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Linked local namespaces for delegation\")))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.cafjslabs.com/docs/documentation#trusted-bus\"\n  }, \"https://www.cafjslabs.com/docs/documentation#trusted-bus\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"SharedMap\"), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Efficient Data Sharing between CAs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Predictable low latency\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Actor Model \", \"\\u2639\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Replicate data in private state,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"and keep it updated with requests\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Distributed Data Structure (DDS) \", \"\\u263A\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use shared-memory for replicated data,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"enabling silent updates\")))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"CA + Distributed Data Structure (DDS)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDS visible as private CA state\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Don't break the Actor Model\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Respect request serialization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Avoid shared-memory \", mdx(\"ins\", null, \"GREMLINS\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Races, deadlocks, awful failure modes...\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Can mechanically replace DDS calls by extra requests\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Observational equivalence\")))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"SharedMap\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Single writer/multiple reader\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Name relative to owner CA\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"antonio-ca1-map1\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"get(key)\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"set(key, value)\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Keys are strings\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Thousands of processes across many servers\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"One update per process, not per CA\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Multi-version with structural reuse\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Replicated in the Cloud, browser, and IoT device\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"div\", null, mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"SharedMap\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"exports.methods = {\\n  async __ca_init__() {\\n    isAdmin(this) && this.$.sharing.addWritableMap('primary', ADMIN_MAP,\\n                                                   {initV: {count: 0}});\\n    this.$.sharing.addReadOnlyMap('replica', primaryMap(this));\\n    return [];\\n  },\\n  async __ca_pulse__() {\\n    if (isAdmin(this)) {\\n      const $$ = this.$.sharing.$;\\n      const count = $$.primary.get('count');\\n      $$.primary.set('count', count + 1);\\n    }\\n    return [];\\n  },\\n  async getCount() {\\n    const value = this.$.sharing.$.replica.get('count');\\n    return [null, value];\\n  }\\n};\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitImage, {\n    mdxType: \"SplitImage\"\n  }, mdx(\"div\", null, mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Safe CA embedding\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Respects request serialization\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Does not delay other readers\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Multiple local versions\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"async getCount() {\\n    const $$ = this.$.sharing.$;\\n    const count1 = $$.replica.get('count');\\n    await setTimeoutPromise(1000);\\n    const count2 = $$.replica.get('count');\\n    assert(count1 === count2,\\n           'This never throws!');\\n    return [null, [count1, count2]];\\n}\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitImage, {\n    mdxType: \"SplitImage\"\n  }, mdx(\"div\", null, mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"SharedMap Consistency\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Transactional plugin\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Atomic updates\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Redis checkpointing\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Externally consistent\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Replicas\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Monotonic read consistency\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No distributed transactions\"))))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"async __ca_pulse__() {\\n    if (isAdmin(this)) {\\n        const $$ = this.$.sharing.$;\\n        const count = $$.primary.get('count');\\n        $$.primary.set('count', count+1);\\n        await setTimeoutPromise(1000);\\n        $$.primary.set('count2', count+2);\\n        this.$.session.notify([count+1, count+2])\\n    }\\n    return [];\\n}\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Updating code\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"SharedMap\"), \" can contain serialized methods\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Becomes a custom \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"replicated object\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Taming \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"eval\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"setFun()\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"applyMethod()\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"{noExec: true}\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Authenticated methods\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Transactional updates of data and code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Many uses\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"getters/setters to hide schema changes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dynamic code updates for devices\")))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Publish-Subscribe\"), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Topics\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Private (like a blog)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Anybody can subscribe, one CA publishes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"antonio-ca1-mynews\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Forum\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Anybody can publish or subscribe\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Trusted Bus\"), \" policy to filter publishers\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"forum-othernews\"))))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"div\", null, mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Publish-Subscribe\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"exports.methods = {\\n    async __ca_init__() {\\n        this.state.count = 0;\\n        this.$.pubsub.subscribe(mainChannel(this), '__ca_handle__');\\n        this.$.security.addRule(this.$.security.newSimpleRule(\\n            '__ca_handle__', this.$.security.SELF, ADMIN_CA\\n        ));\\n        return [];\\n    },\\n    async __ca_pulse__() {\\n        if (isAdmin(this)) {\\n            this.state.count = this.state.count + 1;\\n            this.$.pubsub.publish(mainChannel(this),\\n                                  `Count: ${this.state.count}`);\\n        }\\n        return [];\\n    },\\n    async __ca_handle__(topic, msg, from) {\\n        this.$.session.notify([msg]);\\n        return [];\\n    }\\n};\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"SharedMap and Publish-Subscribe\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Better together\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Publish is best effort, use a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SharedMap\"), \" to confirm\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Silent updates with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SharedMap\"), \", publish for action\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Transactional plugins combine\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Three-way Isomorphic\"), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Browser\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cloud\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Device bridging code\")), mdx(Iso1, {\n    width: \"90%\",\n    height: \"90%\",\n    mdxType: \"Iso1\"\n  })), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Three-way Isomorphic\"), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Browserify\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Web Bluetooth API\")), mdx(Iso2, {\n    width: \"90%\",\n    height: \"90%\",\n    mdxType: \"Iso2\"\n  })), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Three-way Isomorphic\"), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Impersonate\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Introspect\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Load testing\")), mdx(Iso3, {\n    width: \"90%\",\n    height: \"90%\",\n    mdxType: \"Iso3\"\n  })), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Caf.js Lite\"), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Caf.js Lite vs Caf.js\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Differences\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"One \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"CA Lite\"), \" instance per platform\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Long term state with \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Companion CA\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No checkpointing, some plugins are not transactional\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Simpler config with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"iot.json\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"__iot_setup__\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"__iot_loop__\"))))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Caf.js Lite vs Caf.js\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Similarities\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Component model\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Queue serializes methods\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Error rollbacks changes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"this.$\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SharedMap\"), \",...\")))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"div\", null, mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"iot_methods.js\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const caf_iot = require('caf_iot');\\nexports.methods = {\\n  async __iot_setup__() {\\n    this.state.count = this.toCloud.get('count') || 0;\\n    return [];\\n  },\\n  async __iot_loop__() {\\n    const msg = this.fromCloud.get('msg') || 'Count:';\\n    this.$.log.debug(msg + this.state.count);\\n    this.state.count = this.state.count + 1;\\n    this.toCloud.set('count', this.state.count);\\n    return [];\\n  }\\n};\\ncaf_iot.init(module);\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h4\", null, \"ca_methods.js and iot_methods.js\"), mdx(SplitImage, {\n    mdxType: \"SplitImage\"\n  }, mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"// Companion CA\\nconst caf = require('caf_core');\\nexports.methods = {\\n  async __ca_init__() {\\n    return [];\\n  },\\n  async setMessage(newMsg) {\\n    const $$ = this.$.sharing.$;\\n    $$.fromCloud.set('msg', newMsg);\\n    return this.getCount();\\n  },\\n  async getCount() {\\n    const $$ = this.$.sharing.$;\\n    return [null, $$.toCloud.get('count')];\\n  }\\n};\\ncaf.init(module);\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"// CA Lite\\nconst caf_iot = require('caf_iot');\\nexports.methods = {\\n  async __iot_setup__() {\\n    this.state.count = this.toCloud.get('count') || 0;\\n    return [];\\n  },\\n  async __iot_loop__() {\\n    const msg = this.fromCloud.get('msg') || 'Count:';\\n    this.$.log.debug(msg + this.state.count);\\n    this.state.count = this.state.count + 1;\\n    this.toCloud.set('count', this.state.count);\\n    return [];\\n  }\\n};\\ncaf_iot.init(module);\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitImage, {\n    mdxType: \"SplitImage\"\n  }, mdx(\"div\", null, mdx(\"h3\", null, \"Timed Bundles\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Worldwide coordination\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"UTC time\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"100K+ devices with 2s\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"most <100msec\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bundle execution semantics\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Recovery actions\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Late bundles\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NOW and NOW_SAFE\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Not for safety critical apps!\"))), mdx(TimedBundle, {\n    width: \"90%\",\n    height: \"90%\",\n    mdxType: \"TimedBundle\"\n  })), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"div\", null, mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Creating bundles\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"code introspection\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"propagation margin\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"async __ca_pulse__() {\\n  this.state.count = this.state.count + 1;\\n  const bundle = this.$.iot.newBundle(MARGIN);\\n  bundle.down(0, [1]).up(300, [1]).recover(5000, ['go home']);\\n  this.$.iot.sendBundle(bundle);\\n  // `notify` improves responsiveness.\\n  this.$.session.notify([this.state.count], IOT_SESSION);\\n  return [];\\n}\\n\"))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h3\", null, \"Much more\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cron tasks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Companion CA hooks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Error handling\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cloud client plugin\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bluetooth/GATT plugin\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"GPIO plugin\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.cafjslabs.com/docs/documentation#iot-device\"\n  }, \"https://www.cafjslabs.com/docs/documentation#iot-device\")), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Summary\"), mdx(SplitImage, {\n    mdxType: \"SplitImage\"\n  }, mdx(\"div\", null, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Collaborative multi-tenancy\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trusted Bus\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Authentication\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Authorization\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SharedMap\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DDS and Actors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Serialization and consistency\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Updating Code\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Publish-Subscribe\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Private vs Forum\"))))))), mdx(\"div\", null, mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Three-way isomorphic\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Caf.js Lite (IoT)\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Companion CA\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Timed bundle\")))))))), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(\"h2\", null, \"Wrap up\"), mdx(\"p\", null, \"Website: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.cafjs.com\"\n  }, \"https://www.cafjs.com\")), mdx(\"p\", null, \"Github: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/cafjs/caf\"\n  }, \"https://github.com/cafjs/caf\")), mdx(\"p\", null, \"Caf.js Cloud: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://root-launcher.cafjs.com\"\n  }, \"https://root-launcher.cafjs.com\")), mdx(\"p\", null, \"Twitter: @cafjs\"), mdx(\"p\", null, \"E-mail: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"mailto:antlai@cafjs.com\"\n  }, \"antlai@cafjs.com\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Extra slides\"), mdx(\"hr\", null), mdx(CafjsHeader, {\n    mdxType: \"CafjsHeader\"\n  }), mdx(SplitCode, {\n    mdxType: \"SplitCode\"\n  }, mdx(\"div\", null, mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Cron Tasks\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"exports.methods = {\\n  async __iot_setup__() {\\n    const options = {noSync: true};\\n    this.state.count = this.toCloud.get('count') || 0;\\n    this.$.cron.addCron('helloCron', 'greetings', ['Hi:'], 500, options);\\n    this.$.cron.addCron('byeCron', 'greetings', ['Bye:'], 3000, options);\\n    return [];\\n  },\\n  async greetings(greet) {\\n    const now = (new Date()).getTime();\\n    this.$.log && this.$.log.debug(greet + now);\\n    return [];\\n  }\\n};\\ncaf_iot.init(module);\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","title":"Programming with Caf.js"}},"pageContext":{"id":"6d002da4-1c20-5170-aff6-ad13df225e86","slug":"/programming2/slides","title":"Programming with Caf.js"}},"staticQueryHashes":[]}